[model]
name = joint_primary_marginalized
primary_model = 3g
other_models = lisa
static_margin_params_in_other_models = True

[lisa__model]
name = relative
no-save-data = 
low-frequency-cutoff = ${specific|f_start_lisa}
high-frequency-cutoff = ${specific|f_end_lisa}
epsilon = 0.3
mass1_ref = ${specific|mass1}
mass2_ref = ${specific|mass2}
spin1z_ref = ${specific|spin1z}
spin2z_ref = ${specific|spin2z}
; different from tc_ref in ground-based
tc_ref = ${specific|tc}
eclipticlongitude_ref = ${specific|eclipticlongitude}
eclipticlatitude_ref = ${specific|eclipticlatitude}
polarization_ref = ${specific|polarization}
marginalize_phase = False

[3g__model]
name = relative_time_dom
no-save-data = 
low-frequency-cutoff = X4:5.05 X2:5.05 E1:2 E2:2 E3:2
high-frequency-cutoff = 2048
epsilon = 0.3
mass1_ref = ${lisa__model|mass1_ref}
mass2_ref = ${lisa__model|mass2_ref}
spin1z_ref = ${lisa__model|spin1z_ref}
spin2z_ref = ${lisa__model|spin2z_ref}
; set those from frame transform in workflow
tc_ref = ${specific|tc_geo}
ra_ref = ${specific|ra}
dec_ref = ${specific|dec}
polarization_ref = ${specific|polarization_geo}

; This model precalculates the SNR time series at a fixed rate.
; If you need a higher time resolution, this may be increased
sample_rate = 500000
peak_snr_threshold = 5.0
peak_lock_snr = 5.0
peak_lock_ratio = 10000
peak_lock_region = 5

marginalize_vector_params = tc, ra, dec
marginalize_sky_initial_samples = 1e7
marginalize_vector_samples = 5000
marginalize_phase = True

marginalize_distance = True
marginalize_distance_param = distance
marginalize_distance_interpolator = True
; set SNR range according to optimal SNR in workflow
marginalize_distance_snr_range = ${specific|snr_3g_min}, ${specific|snr_3g_max}
marginalize_distance_density = 400, 400
marginalize_distance_samples = 80000

[lisa__data]
instruments = LISA_A LISA_E LISA_T
; trigger-time should be the tc in LISA frame.
; In the production run, set those accroding to frame transform
; in workflow
trigger-time = ${specific|tc_lisa}
analysis-start-time = -${specific|t_obs_start_lisa}
analysis-end-time = 1000
pad-data = 0
sample-rate = 0.2
fake-strain = LISA_A:analytical_psd_lisa_tdi_AE_confusion LISA_E:analytical_psd_lisa_tdi_AE_confusion LISA_T:analytical_psd_lisa_tdi_T
fake-strain-extra-args = len_arm:2.5e9 acc_noise_level:2.4e-15 oms_noise_level:7.9e-12 tdi:2.0 LISA_A:duration:${specific|t_obs_lisa} LISA_E:duration:${specific|t_obs_lisa}
fake-strain-seed = LISA_A:100 LISA_E:150 LISA_T:200
; The f_lower of detector is independent from f_start of GW signals.
fake-strain-flow = 0.0001
fake-strain-sample-rate = ${lisa__data|sample-rate}
fake-strain-filter-duration = ${specific|psd_inverse_length}
psd-estimation = median-mean
invpsd-trunc-method = hann
psd-inverse-length = ${specific|psd_inverse_length}
psd-segment-length = ${specific|psd_segment_length}
psd-segment-stride = ${specific|psd_segment_stride}
psd-start-time = ${lisa__data|analysis-start-time}
psd-end-time = 1000
channel-name = LISA_A:LISA_A LISA_E:LISA_E LISA_T:LISA_T
injection-file = ${specific|injection-file-lisa}

[3g__data]
instruments = X4 X2 E1 E2 E3
trigger-time = ${3g__model|tc_ref}
; set this according to each detector in workflow
analysis-start-time = X4:-${specific|duration_ce} X2:-${specific|duration_ce} E1:-${specific|duration_et} E2:-${specific|duration_et} E3:-${specific|duration_et}
analysis-end-time = 2
sample-rate = 4096
fake-strain-from-file = X4:/work/shichao.wu/Area51/coherent_multiband_prod/ground_det_asd/ce_strain/cosmic_explorer_strain.txt X2:/work/shichao.wu/Area51/coherent_multiband_prod/ground_det_asd/ce_strain/cosmic_explorer_20km_strain.txt E1:/work/shichao.wu/Area51/coherent_multiband_prod/ground_det_asd/ET_D_asd.txt E2:/work/shichao.wu/Area51/coherent_multiband_prod/ground_det_asd/ET_D_asd.txt E3:/work/shichao.wu/Area51/coherent_multiband_prod/ground_det_asd/ET_D_asd.txt
fake-strain-seed = X4:100 X2:150 E1:200 E2:250 E3:300
fake-strain-flow = X4:5.05 X2:5.05 E1:2 E2:2 E3:2
fake-strain-sample-rate = 4096
psd-estimation = median-mean
psd-inverse-length = 8
psd-segment-length = 8
psd-segment-stride = 4
psd-start-time = -256
psd-end-time = 256
channel-name = X4:STRAIN X2:STRAIN E1:STRAIN E2:STRAIN E3:STRAIN
injection-file = ${specific|injection-file-3g}
strain-high-pass = X4:5.05 X2:5.05 E1:2 E2:2 E3:2
pad-data = 8

[variable_params]
; common parameters
mchirp =
q =
tc = 
ra = 
dec = 
polarization = 
chi_eff = 
chi_a = 
distance = 
inclination = 

[static_params]
lisa__tdi = 2.0
lisa__ref_frame = SSB
lisa__approximant = BBHX_PhenomD
lisa__mf_min = ${specific|mf_start_lisa}
lisa__cache_generator = False
lisa__enable_flower_warn = False
lisa__t_offset = 7365189.431698299
3g__approximant = IMRPhenomD
3g__detector_projection_method = constant
; set this to be the Tobs_start in workflow
lisa__t_obs_start = ${specific|t_obs_start_lisa}
lisa__f_lower = ${lisa__model|low-frequency-cutoff}
lisa__f_ref = 5
; follow LDC convention, coa_phase in 3G is 0 after marginalization
lisa__coa_phase = 1.5707963267948966
3g__f_lower = X4:5.05 X2:5.05 E1:2 E2:2 E3:2
3g__f_ref = 5

[prior-mchirp]
name = uniform
min-mchirp = ${specific|mchirp_min}
max-mchirp = ${specific|mchirp_max}

[prior-q]
name = uniform
min-q = ${specific|q_min}
max-q = ${specific|q_max}

[prior-chi_eff]
name = uniform
min-chi_eff = ${specific|chi_eff_min}
max-chi_eff = ${specific|chi_eff_max}

[prior-chi_a]
name = uniform
min-chi_a = ${specific|chi_a_min}
max-chi_a = ${specific|chi_a_max}

[prior-tc]
name = uniform
min-tc = ${specific|tc_geo_min}
max-tc = ${specific|tc_geo_max}

[prior-ra]
name = uniform_angle
min-ra = ${specific|ra_min}
max-ra = ${specific|ra_max}

[prior-dec]
name = cos_angle
min-dec = ${specific|dec_min}
max-dec = ${specific|dec_max}

[prior-polarization]
name = uniform_angle
min-polarization = 0
max-polarization = 3.141592653589793

[prior-distance]
; following gives a uniform in volume
name = uniform_radius
min-distance = ${specific|dl_min}
max-distance = ${specific|dl_max}

[prior-inclination]
name = sin_angle

[waveform_transforms-mass1+mass2]
name = custom
inputs = mchirp, q
mass1 = mass1_from_mchirp_q(mchirp, q)
mass2 = mass2_from_mchirp_q(mchirp, q)

[lisa__waveform_transforms-tc+eclipticlongitude+eclipticlatitude+polarization]
name = geo_to_ssb
tc-geo = tc
longitude-geo = ra
latitude-geo = dec
polarization-geo = polarization
tc-ssb = tc
longitude-ssb = eclipticlongitude
latitude-ssb = eclipticlatitude
polarization-ssb = polarization

[waveform_transforms-spin1z+spin2z]
name = custom
inputs = mass1, mass2, chi_eff, chi_a
spin1z = spin1z_from_mass1_mass2_chi_eff_chi_a(mass1, mass2, chi_eff, chi_a)
spin2z = spin2z_from_mass1_mass2_chi_eff_chi_a(mass1, mass2, chi_eff, chi_a)

[defs]
mass1 = mass1_from_mchirp_q(mchirp, q)
mass2 = mass2_from_mchirp_q(mchirp, q)
spin1z = spin1z_from_mass1_mass2_chi_eff_chi_a(${mass1}, ${mass2}, chi_eff, chi_a)
spin2z = spin2z_from_mass1_mass2_chi_eff_chi_a(${mass1}, ${mass2}, chi_eff, chi_a)

[constraint-1]
name = custom
constraint_arg = (${defs|spin1z} > -1) & (${defs|spin1z} < 1)

[constraint-2]
name = custom
constraint_arg = (${defs|spin2z} > -1) & (${defs|spin2z} < 1)

[sampler]
name = nessai
nlive = 200
output = ${specific|nessai_output}
