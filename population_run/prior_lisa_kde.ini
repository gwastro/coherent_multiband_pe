[model]
name = relative
low-frequency-cutoff = ${specific|f_start_lisa}
high-frequency-cutoff = ${specific|f_end_lisa}
epsilon = 0.3
mass1_ref = ${specific|mass1}
mass2_ref = ${specific|mass2}
spin1z_ref = ${specific|spin1z}
spin2z_ref = ${specific|spin2z}
; different from tc_ref in ground-based
tc_ref = ${specific|tc}
eclipticlongitude_ref = ${specific|eclipticlongitude}
eclipticlatitude_ref = ${specific|eclipticlatitude}
polarization_ref = ${specific|polarization}
marginalize_phase = False

[data]
instruments = LISA_A LISA_E LISA_T
; trigger-time should be the tc in LISA frame.
; In the production run, set those accroding to frame transform
; in workflow
trigger-time = ${specific|tc_lisa}
analysis-start-time = -${specific|t_obs_start_lisa}
analysis-end-time = 1000
pad-data = 0
sample-rate = 0.2
fake-strain = LISA_A:analytical_psd_lisa_tdi_AE_confusion LISA_E:analytical_psd_lisa_tdi_AE_confusion LISA_T:analytical_psd_lisa_tdi_T
fake-strain-extra-args = len_arm:2.5e9 acc_noise_level:2.4e-15 oms_noise_level:7.9e-12 tdi:2.0 LISA_A:duration:${specific|t_obs_lisa} LISA_E:duration:${specific|t_obs_lisa}
fake-strain-seed = LISA_A:100 LISA_E:150 LISA_T:200
; The f_lower of detector is independent from f_start of GW signals.
fake-strain-flow = 0.0001
fake-strain-sample-rate = ${data|sample-rate}
fake-strain-filter-duration = ${specific|psd_inverse_length}
psd-estimation = median-mean
invpsd-trunc-method = hann
psd-inverse-length = ${specific|psd_inverse_length}
psd-segment-length = ${specific|psd_segment_length}
psd-segment-stride = ${specific|psd_segment_stride}
psd-start-time = ${data|analysis-start-time}
psd-end-time = 1000
channel-name = LISA_A:LISA_A LISA_E:LISA_E LISA_T:LISA_T
injection-file = ${specific|injection-file-lisa}

[variable_params]
; common parameters
mchirp =
q =
tc = 
ra = 
dec = 
polarization = 
chi_eff = 
chi_a = 
distance = 
inclination = 
coa_phase = 

[static_params]
tdi = 2.0
ref_frame = SSB
approximant = BBHX_PhenomD
mf_min = ${specific|mf_start_lisa}
cache_generator = False
enable_flower_warn = False
t_offset = 7365189.431698299
; set this to be the Tobs_start in workflow
t_obs_start = ${specific|t_obs_start_lisa}
f_lower = ${model|low-frequency-cutoff}
f_ref = 5

[prior-mchirp]
name = fromfile
filename = ${specific|posterior_3g_path}
datagroup = samples

[prior-q]
name = fromfile
filename = ${specific|posterior_3g_path}
datagroup = samples

[prior-chi_eff]
name = fromfile
filename = ${specific|posterior_3g_path}
datagroup = samples

[prior-chi_a]
name = fromfile
filename = ${specific|posterior_3g_path}
datagroup = samples

[prior-tc]
name = fromfile
filename = ${specific|posterior_3g_path}
datagroup = samples

[prior-ra]
name = fromfile
filename = ${specific|posterior_3g_path}
datagroup = samples
min-ra = 0
max-ra = 6.283185307179586

[prior-dec]
name = fromfile
filename = ${specific|posterior_3g_path}
datagroup = samples
min-dec = -1.5707963267948966
max-dec = 1.5707963267948966

[prior-polarization]
name = fromfile
filename = ${specific|posterior_3g_path}
datagroup = samples
min-polarization = 0
max-polarization = 3.141592653589793

[prior-distance]
name = fromfile
filename = ${specific|posterior_3g_path}
datagroup = samples

[prior-inclination]
name = fromfile
filename = ${specific|posterior_3g_path}
datagroup = samples

[prior-coa_phase]
name = fromfile
filename = ${specific|posterior_3g_path}
datagroup = samples

[waveform_transforms-mass1+mass2]
name = custom
inputs = mchirp, q
mass1 = mass1_from_mchirp_q(mchirp, q)
mass2 = mass2_from_mchirp_q(mchirp, q)

[waveform_transforms-tc+eclipticlongitude+eclipticlatitude+polarization]
name = geo_to_ssb
tc-geo = tc
longitude-geo = ra
latitude-geo = dec
polarization-geo = polarization
tc-ssb = tc
longitude-ssb = eclipticlongitude
latitude-ssb = eclipticlatitude
polarization-ssb = polarization

[waveform_transforms-spin1z+spin2z]
name = custom
inputs = mass1, mass2, chi_eff, chi_a
spin1z = spin1z_from_mass1_mass2_chi_eff_chi_a(mass1, mass2, chi_eff, chi_a)
spin2z = spin2z_from_mass1_mass2_chi_eff_chi_a(mass1, mass2, chi_eff, chi_a)

[defs]
mass1 = mass1_from_mchirp_q(mchirp, q)
mass2 = mass2_from_mchirp_q(mchirp, q)
spin1z = spin1z_from_mass1_mass2_chi_eff_chi_a(${mass1}, ${mass2}, chi_eff, chi_a)
spin2z = spin2z_from_mass1_mass2_chi_eff_chi_a(${mass1}, ${mass2}, chi_eff, chi_a)

[constraint-1]
name = custom
constraint_arg = (${defs|spin1z} > -1) & (${defs|spin1z} < 1)

[constraint-2]
name = custom
constraint_arg = (${defs|spin2z} > -1) & (${defs|spin2z} < 1)

[sampler]
name = nessai
nlive = 200
output = ${specific|nessai_output}
reparameterisations={'z-score': {'parameters': ['mchirp', 'q', 'tc', 'ra', 'dec', 'polarization', 'chi_eff', 'chi_a', 'distance', 'inclination', 'coa_phase']}}
fallback_reparameterisation='z-score'
